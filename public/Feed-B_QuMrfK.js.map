{"version":3,"mappings":"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","names":["useListBinaryImagePosts","cursor","refetch","useQuery","LIST_BINARYIMAGEPOSTS","refetchedData","refetchedLoading","refetchedError","Post","lazy","__vitePreload","Feed","posts","setPosts","useState","error","setError","loading","setLoading","meta","setMeta","setCursor","listBinaryImagePosts","t","useTranslation","handleLoadMore","data","newPosts","post","index","existingPostIds","updatedPosts","useLayoutEffect","initialPosts","jsxs","jsx","Alert","FontAwesomeIcon","faInfo","Suspense","Spinner","faCircleChevronDown"],"ignoreList":[],"sources":["../../src/hooks/useListBinaryImagePosts.ts","../../src/components/Feed.tsx"],"sourcesContent":["/*\n *   Copyright (c) 2024 Andrew Halliwell\n\n *   This program is free software: you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation, either version 3 of the License, or\n *   (at your option) any later version.\n\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n\n *   You should have received a copy of the GNU General Public License\n *   along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport { useQuery } from \"@apollo/client\";\nimport { LIST_BINARYIMAGEPOSTS } from \"../api/api\";\n\n/*\n * List binary image posts\n * @returns The list of binary image posts\n * @example\n * const { data, loading, error } = useListBinaryImagePosts();\n */\nexport const useListBinaryImagePosts = (cursor: string) => {\n    const { refetch } = useQuery(LIST_BINARYIMAGEPOSTS, {\n        context: {\n            apiName: \"read\",\n        },\n        fetchPolicy: \"cache-and-network\",\n        nextFetchPolicy: \"cache-first\",\n        returnPartialData: false,\n        variables: {\n            cursor: cursor,\n        },\n    });\n\n    /**\n     * Fetches the list of binary image posts\n     * @param cursor The cursor to use when fetching the posts\n     * @returns An object with three properties: data, loading, and error.\n     * data is the list of binary image posts, loading is a boolean indicating whether the data is being fetched,\n     * and error is an object containing any error message.\n     */\n    const listBinaryImagePosts = async (\n        cursor: string,\n    ): Promise<{\n        data: any;\n        loading: boolean;\n        error: any;\n    }> => {\n        const {\n            data: refetchedData,\n            loading: refetchedLoading,\n            error: refetchedError,\n        } = await refetch({ cursor: cursor });\n        return {\n            data: refetchedData,\n            loading: refetchedLoading,\n            error: refetchedError,\n        } as any;\n    };\n    return { listBinaryImagePosts };\n};\n","/*\n *   Copyright (c) 2024 Andrew Halliwell\n\n *   This program is free software: you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation, either version 3 of the License, or\n *   (at your option) any later version.\n\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n\n *   You should have received a copy of the GNU General Public License\n *   along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport { FC, useLayoutEffect, useState, lazy, Suspense, ReactElement } from \"react\";\nimport { Spinner } from \"flowbite-react/components/Spinner\";\nimport { Alert } from \"flowbite-react/components/Alert\";\nimport { PostProps } from \"../types\";\nimport { useListBinaryImagePosts } from \"../hooks/useListBinaryImagePosts\";\nimport { faCircleChevronDown, faInfo } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useTranslation } from \"react-i18next\";\n\nconst Post = lazy(() => import(\"./Post\"));\n\n/**\n * @description\n * The Feed component renders a list of binary image posts. It fetches the posts\n * from the server and renders them in a list. It also provides a load more button\n * to fetch more posts.\n *\n * @param {Object} props - The component props\n * @param {string} [props.className] - The class name to be applied to the container element\n * @returns {ReactElement} The Feed component\n *\n * @example\n * <Feed />\n */\nconst Feed: FC = (): ReactElement => {\n    const [posts, setPosts] = useState<PostProps[]>([]);\n    const [error, setError] = useState<Error | null>(null);\n    const [loading, setLoading] = useState<boolean>(true);\n    const [meta, setMeta] = useState<{ hasMoreItems: boolean; cursor: string | null; totalCount: number } | null>(null);\n    const [cursor, setCursor] = useState<string | null>(null);\n    const { listBinaryImagePosts } = useListBinaryImagePosts(\"\");\n\n    const { t } = useTranslation();\n\n    const handleLoadMore = async (cursor: string) => {\n\n        const { data, loading, error } = await listBinaryImagePosts(cursor);\n\n        if (loading) {\n            setLoading(loading)\n            return;\n        };\n        if (error) {\n            setError(error);\n            return;\n        }\n        if (data && data.listBinaryImagePosts && data.listBinaryImagePosts.data) {\n\n            const newPosts = data.listBinaryImagePosts.data.map((post: any, index: any) => ({ ...post, key: `${cursor}-${index}` }));\n            const existingPostIds = new Set(posts.map((post) => post.key));\n            const updatedPosts = [...posts, ...newPosts.filter((post: { key: string; }) => !existingPostIds.has(post.key))];\n\n            setLoading(false);\n            setPosts(updatedPosts);\n            setMeta(data.listBinaryImagePosts.meta);\n            setCursor(data.listBinaryImagePosts.meta.cursor);\n        }\n    };\n\n    useLayoutEffect(() => {\n        const fetchInitialPosts = async () => {\n            const { data, loading, error } = await listBinaryImagePosts(\"\");\n\n            if (loading) {\n                setLoading(loading)\n                return;\n            };\n            if (error) {\n                setError(error);\n                return;\n            }\n            const initialPosts = data.listBinaryImagePosts.data.map((post: any, index: any) => ({ ...post, key: `initial-${index}` }));\n\n            setLoading(false);\n            setPosts(initialPosts);\n            setMeta(data.listBinaryImagePosts.meta);\n            setCursor(data.listBinaryImagePosts.meta.cursor);\n        };\n\n        fetchInitialPosts();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (loading) return (\n        <div className=\"flex-inline items-center justify-center lg:py-8 px-12 max-w-screen-lg mx-auto w-full xs:px-1 md:px-4 pb-1 pt-8\">\n            <Post id=\"loading\" entryId=\"\" author=\"\" posted={new Date()} image={\"\"} key={undefined} width={1084} height={506} />\n            <span className=\"sr-only\">Loading...</span>\n        </div>\n    );\n    if (error) return (\n        <Alert color=\"failure\">\n            <FontAwesomeIcon icon={faInfo} />\n            <span className=\"font-medium\">Oh dang!</span> There was an error loading more posts.\n        </Alert>\n    );\n\n    return (\n        <div id=\"feed\">\n            <div className=\"flex-inline items-center justify-center lg:py-8 px-12 max-w-screen-lg mx-auto w-full xs:px-1 md:px-4 pb-1 pt-8\">\n                <h4 className=\"h4 sm:hidden mb-2 text-left text-2xl font-bold text-white xs:hidden\">\n                    {t(\"feed.title\")}\n                </h4>\n                {posts.map((post) => (\n                    <Suspense key={post.key} fallback={<span className=\"w-full xs:h-[386px] sm:h-[430px] md:h-[645px] lg:h-[778px] flex items-center justify-center\"><Spinner /></span>}>\n                        <Post key={post.key} entryId={post.entryId} id={post.id} author={post.author} posted={post.posted} image={post.image} width={post.width} height={post.height} />\n                    </Suspense>\n                ))}\n                <div className=\"flex flex-col items-center\">\n                    <span className=\"text-sm text-gray-100 dark:text-gray-300\">\n                        Showing <span className=\"font-bold text-gray-100 dark:text-white\">{posts.length}</span> of <span className=\"font-bold text-gray-100 dark:text-white\">{meta?.totalCount}</span> Entries\n                    </span>\n                    <div className=\"inline-flex mt-2 mb-4 xs:mt-0\">\n                        {meta && meta.hasMoreItems && meta.cursor !== null && (\n                            <button onClick={() => handleLoadMore(cursor as string)} className=\"flex items-center justify-center px-4 h-10 text-base font-medium text-gray-900 bg-gray-200 border-0 border-s border-gray-700 rounded-md hover:bg-gray-300 dark:bg-slate-900 dark:border-gray-700 dark:text-gray-300 dark:hover:bg-slate-700 dark:hover:text-white transition duration-300 ease-in-out\">{t(\"feed.loadmore\")}\n                                <FontAwesomeIcon icon={faCircleChevronDown} className=\"ml-2\" /></button>\n                        )}\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    );\n};\n\nexport default Feed;\n"],"file":"public/Feed-B_QuMrfK.js"}